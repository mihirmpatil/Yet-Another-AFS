// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: afs.proto

#ifndef PROTOBUF_afs_2eproto__INCLUDED
#define PROTOBUF_afs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace afs {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_afs_2eproto();
void protobuf_AssignDesc_afs_2eproto();
void protobuf_ShutdownFile_afs_2eproto();

class Dirent;
class DirentReply;
class FlushReply;
class FlushRequest;
class RenameRequest;
class Reply;
class Request;
class Stat;
class StatusReply;

// ===================================================================

class Request : public ::google::protobuf::Message {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:afs.Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afs_2eproto();
  friend void protobuf_AssignDesc_afs_2eproto();
  friend void protobuf_ShutdownFile_afs_2eproto();

  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// -------------------------------------------------------------------

class Reply : public ::google::protobuf::Message {
 public:
  Reply();
  virtual ~Reply();

  Reply(const Reply& from);

  inline Reply& operator=(const Reply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Reply& default_instance();

  void Swap(Reply* other);

  // implements Message ----------------------------------------------

  inline Reply* New() const { return New(NULL); }

  Reply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Reply& from);
  void MergeFrom(const Reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Reply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:afs.Reply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afs_2eproto();
  friend void protobuf_AssignDesc_afs_2eproto();
  friend void protobuf_ShutdownFile_afs_2eproto();

  void InitAsDefaultInstance();
  static Reply* default_instance_;
};
// -------------------------------------------------------------------

class Stat : public ::google::protobuf::Message {
 public:
  Stat();
  virtual ~Stat();

  Stat(const Stat& from);

  inline Stat& operator=(const Stat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Stat& default_instance();

  void Swap(Stat* other);

  // implements Message ----------------------------------------------

  inline Stat* New() const { return New(NULL); }

  Stat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Stat& from);
  void MergeFrom(const Stat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Stat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dev = 1;
  void clear_dev();
  static const int kDevFieldNumber = 1;
  ::google::protobuf::int32 dev() const;
  void set_dev(::google::protobuf::int32 value);

  // optional int32 ino = 2;
  void clear_ino();
  static const int kInoFieldNumber = 2;
  ::google::protobuf::int32 ino() const;
  void set_ino(::google::protobuf::int32 value);

  // optional int32 mode = 3;
  void clear_mode();
  static const int kModeFieldNumber = 3;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // optional int32 nlink = 4;
  void clear_nlink();
  static const int kNlinkFieldNumber = 4;
  ::google::protobuf::int32 nlink() const;
  void set_nlink(::google::protobuf::int32 value);

  // optional int32 uid = 5;
  void clear_uid();
  static const int kUidFieldNumber = 5;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // optional int32 gid = 6;
  void clear_gid();
  static const int kGidFieldNumber = 6;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // optional int32 rdev = 7;
  void clear_rdev();
  static const int kRdevFieldNumber = 7;
  ::google::protobuf::int32 rdev() const;
  void set_rdev(::google::protobuf::int32 value);

  // optional int64 size = 8;
  void clear_size();
  static const int kSizeFieldNumber = 8;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // optional int64 a_time = 9;
  void clear_a_time();
  static const int kATimeFieldNumber = 9;
  ::google::protobuf::int64 a_time() const;
  void set_a_time(::google::protobuf::int64 value);

  // optional int64 m_time = 10;
  void clear_m_time();
  static const int kMTimeFieldNumber = 10;
  ::google::protobuf::int64 m_time() const;
  void set_m_time(::google::protobuf::int64 value);

  // optional int64 c_time = 11;
  void clear_c_time();
  static const int kCTimeFieldNumber = 11;
  ::google::protobuf::int64 c_time() const;
  void set_c_time(::google::protobuf::int64 value);

  // optional int32 block_size = 12;
  void clear_block_size();
  static const int kBlockSizeFieldNumber = 12;
  ::google::protobuf::int32 block_size() const;
  void set_block_size(::google::protobuf::int32 value);

  // optional int32 blocks = 13;
  void clear_blocks();
  static const int kBlocksFieldNumber = 13;
  ::google::protobuf::int32 blocks() const;
  void set_blocks(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:afs.Stat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 dev_;
  ::google::protobuf::int32 ino_;
  ::google::protobuf::int32 mode_;
  ::google::protobuf::int32 nlink_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int64 size_;
  ::google::protobuf::int64 a_time_;
  ::google::protobuf::int32 rdev_;
  ::google::protobuf::int32 block_size_;
  ::google::protobuf::int64 m_time_;
  ::google::protobuf::int64 c_time_;
  ::google::protobuf::int32 blocks_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afs_2eproto();
  friend void protobuf_AssignDesc_afs_2eproto();
  friend void protobuf_ShutdownFile_afs_2eproto();

  void InitAsDefaultInstance();
  static Stat* default_instance_;
};
// -------------------------------------------------------------------

class Dirent : public ::google::protobuf::Message {
 public:
  Dirent();
  virtual ~Dirent();

  Dirent(const Dirent& from);

  inline Dirent& operator=(const Dirent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dirent& default_instance();

  void Swap(Dirent* other);

  // implements Message ----------------------------------------------

  inline Dirent* New() const { return New(NULL); }

  Dirent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dirent& from);
  void MergeFrom(const Dirent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Dirent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 reclen = 2;
  void clear_reclen();
  static const int kReclenFieldNumber = 2;
  ::google::protobuf::int32 reclen() const;
  void set_reclen(::google::protobuf::int32 value);

  // optional int32 d_type = 3;
  void clear_d_type();
  static const int kDTypeFieldNumber = 3;
  ::google::protobuf::int32 d_type() const;
  void set_d_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:afs.Dirent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 reclen_;
  ::google::protobuf::int32 d_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afs_2eproto();
  friend void protobuf_AssignDesc_afs_2eproto();
  friend void protobuf_ShutdownFile_afs_2eproto();

  void InitAsDefaultInstance();
  static Dirent* default_instance_;
};
// -------------------------------------------------------------------

class DirentReply : public ::google::protobuf::Message {
 public:
  DirentReply();
  virtual ~DirentReply();

  DirentReply(const DirentReply& from);

  inline DirentReply& operator=(const DirentReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DirentReply& default_instance();

  void Swap(DirentReply* other);

  // implements Message ----------------------------------------------

  inline DirentReply* New() const { return New(NULL); }

  DirentReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DirentReply& from);
  void MergeFrom(const DirentReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DirentReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // repeated .afs.Dirent dirent = 2;
  int dirent_size() const;
  void clear_dirent();
  static const int kDirentFieldNumber = 2;
  const ::afs::Dirent& dirent(int index) const;
  ::afs::Dirent* mutable_dirent(int index);
  ::afs::Dirent* add_dirent();
  ::google::protobuf::RepeatedPtrField< ::afs::Dirent >*
      mutable_dirent();
  const ::google::protobuf::RepeatedPtrField< ::afs::Dirent >&
      dirent() const;

  // @@protoc_insertion_point(class_scope:afs.DirentReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::afs::Dirent > dirent_;
  ::google::protobuf::int32 count_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afs_2eproto();
  friend void protobuf_AssignDesc_afs_2eproto();
  friend void protobuf_ShutdownFile_afs_2eproto();

  void InitAsDefaultInstance();
  static DirentReply* default_instance_;
};
// -------------------------------------------------------------------

class FlushRequest : public ::google::protobuf::Message {
 public:
  FlushRequest();
  virtual ~FlushRequest();

  FlushRequest(const FlushRequest& from);

  inline FlushRequest& operator=(const FlushRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FlushRequest& default_instance();

  void Swap(FlushRequest* other);

  // implements Message ----------------------------------------------

  inline FlushRequest* New() const { return New(NULL); }

  FlushRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FlushRequest& from);
  void MergeFrom(const FlushRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FlushRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional bytes data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:afs.FlushRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afs_2eproto();
  friend void protobuf_AssignDesc_afs_2eproto();
  friend void protobuf_ShutdownFile_afs_2eproto();

  void InitAsDefaultInstance();
  static FlushRequest* default_instance_;
};
// -------------------------------------------------------------------

class FlushReply : public ::google::protobuf::Message {
 public:
  FlushReply();
  virtual ~FlushReply();

  FlushReply(const FlushReply& from);

  inline FlushReply& operator=(const FlushReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FlushReply& default_instance();

  void Swap(FlushReply* other);

  // implements Message ----------------------------------------------

  inline FlushReply* New() const { return New(NULL); }

  FlushReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FlushReply& from);
  void MergeFrom(const FlushReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FlushReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:afs.FlushReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afs_2eproto();
  friend void protobuf_AssignDesc_afs_2eproto();
  friend void protobuf_ShutdownFile_afs_2eproto();

  void InitAsDefaultInstance();
  static FlushReply* default_instance_;
};
// -------------------------------------------------------------------

class StatusReply : public ::google::protobuf::Message {
 public:
  StatusReply();
  virtual ~StatusReply();

  StatusReply(const StatusReply& from);

  inline StatusReply& operator=(const StatusReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusReply& default_instance();

  void Swap(StatusReply* other);

  // implements Message ----------------------------------------------

  inline StatusReply* New() const { return New(NULL); }

  StatusReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatusReply& from);
  void MergeFrom(const StatusReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatusReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:afs.StatusReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afs_2eproto();
  friend void protobuf_AssignDesc_afs_2eproto();
  friend void protobuf_ShutdownFile_afs_2eproto();

  void InitAsDefaultInstance();
  static StatusReply* default_instance_;
};
// -------------------------------------------------------------------

class RenameRequest : public ::google::protobuf::Message {
 public:
  RenameRequest();
  virtual ~RenameRequest();

  RenameRequest(const RenameRequest& from);

  inline RenameRequest& operator=(const RenameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RenameRequest& default_instance();

  void Swap(RenameRequest* other);

  // implements Message ----------------------------------------------

  inline RenameRequest* New() const { return New(NULL); }

  RenameRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RenameRequest& from);
  void MergeFrom(const RenameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RenameRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string old_name = 1;
  void clear_old_name();
  static const int kOldNameFieldNumber = 1;
  const ::std::string& old_name() const;
  void set_old_name(const ::std::string& value);
  void set_old_name(const char* value);
  void set_old_name(const char* value, size_t size);
  ::std::string* mutable_old_name();
  ::std::string* release_old_name();
  void set_allocated_old_name(::std::string* old_name);

  // optional string new_name = 2;
  void clear_new_name();
  static const int kNewNameFieldNumber = 2;
  const ::std::string& new_name() const;
  void set_new_name(const ::std::string& value);
  void set_new_name(const char* value);
  void set_new_name(const char* value, size_t size);
  ::std::string* mutable_new_name();
  ::std::string* release_new_name();
  void set_allocated_new_name(::std::string* new_name);

  // @@protoc_insertion_point(class_scope:afs.RenameRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr old_name_;
  ::google::protobuf::internal::ArenaStringPtr new_name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_afs_2eproto();
  friend void protobuf_AssignDesc_afs_2eproto();
  friend void protobuf_ShutdownFile_afs_2eproto();

  void InitAsDefaultInstance();
  static RenameRequest* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Request

// optional string name = 1;
inline void Request::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request::name() const {
  // @@protoc_insertion_point(field_get:afs.Request.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afs.Request.name)
}
inline void Request::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afs.Request.name)
}
inline void Request::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afs.Request.name)
}
inline ::std::string* Request::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:afs.Request.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:afs.Request.name)
}

// -------------------------------------------------------------------

// Reply

// optional string data = 1;
inline void Reply::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Reply::data() const {
  // @@protoc_insertion_point(field_get:afs.Reply.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Reply::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afs.Reply.data)
}
inline void Reply::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afs.Reply.data)
}
inline void Reply::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afs.Reply.data)
}
inline ::std::string* Reply::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:afs.Reply.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Reply::release_data() {
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Reply::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:afs.Reply.data)
}

// -------------------------------------------------------------------

// Stat

// optional int32 dev = 1;
inline void Stat::clear_dev() {
  dev_ = 0;
}
inline ::google::protobuf::int32 Stat::dev() const {
  // @@protoc_insertion_point(field_get:afs.Stat.dev)
  return dev_;
}
inline void Stat::set_dev(::google::protobuf::int32 value) {
  
  dev_ = value;
  // @@protoc_insertion_point(field_set:afs.Stat.dev)
}

// optional int32 ino = 2;
inline void Stat::clear_ino() {
  ino_ = 0;
}
inline ::google::protobuf::int32 Stat::ino() const {
  // @@protoc_insertion_point(field_get:afs.Stat.ino)
  return ino_;
}
inline void Stat::set_ino(::google::protobuf::int32 value) {
  
  ino_ = value;
  // @@protoc_insertion_point(field_set:afs.Stat.ino)
}

// optional int32 mode = 3;
inline void Stat::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 Stat::mode() const {
  // @@protoc_insertion_point(field_get:afs.Stat.mode)
  return mode_;
}
inline void Stat::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:afs.Stat.mode)
}

// optional int32 nlink = 4;
inline void Stat::clear_nlink() {
  nlink_ = 0;
}
inline ::google::protobuf::int32 Stat::nlink() const {
  // @@protoc_insertion_point(field_get:afs.Stat.nlink)
  return nlink_;
}
inline void Stat::set_nlink(::google::protobuf::int32 value) {
  
  nlink_ = value;
  // @@protoc_insertion_point(field_set:afs.Stat.nlink)
}

// optional int32 uid = 5;
inline void Stat::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 Stat::uid() const {
  // @@protoc_insertion_point(field_get:afs.Stat.uid)
  return uid_;
}
inline void Stat::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:afs.Stat.uid)
}

// optional int32 gid = 6;
inline void Stat::clear_gid() {
  gid_ = 0;
}
inline ::google::protobuf::int32 Stat::gid() const {
  // @@protoc_insertion_point(field_get:afs.Stat.gid)
  return gid_;
}
inline void Stat::set_gid(::google::protobuf::int32 value) {
  
  gid_ = value;
  // @@protoc_insertion_point(field_set:afs.Stat.gid)
}

// optional int32 rdev = 7;
inline void Stat::clear_rdev() {
  rdev_ = 0;
}
inline ::google::protobuf::int32 Stat::rdev() const {
  // @@protoc_insertion_point(field_get:afs.Stat.rdev)
  return rdev_;
}
inline void Stat::set_rdev(::google::protobuf::int32 value) {
  
  rdev_ = value;
  // @@protoc_insertion_point(field_set:afs.Stat.rdev)
}

// optional int64 size = 8;
inline void Stat::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::size() const {
  // @@protoc_insertion_point(field_get:afs.Stat.size)
  return size_;
}
inline void Stat::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:afs.Stat.size)
}

// optional int64 a_time = 9;
inline void Stat::clear_a_time() {
  a_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::a_time() const {
  // @@protoc_insertion_point(field_get:afs.Stat.a_time)
  return a_time_;
}
inline void Stat::set_a_time(::google::protobuf::int64 value) {
  
  a_time_ = value;
  // @@protoc_insertion_point(field_set:afs.Stat.a_time)
}

// optional int64 m_time = 10;
inline void Stat::clear_m_time() {
  m_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::m_time() const {
  // @@protoc_insertion_point(field_get:afs.Stat.m_time)
  return m_time_;
}
inline void Stat::set_m_time(::google::protobuf::int64 value) {
  
  m_time_ = value;
  // @@protoc_insertion_point(field_set:afs.Stat.m_time)
}

// optional int64 c_time = 11;
inline void Stat::clear_c_time() {
  c_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Stat::c_time() const {
  // @@protoc_insertion_point(field_get:afs.Stat.c_time)
  return c_time_;
}
inline void Stat::set_c_time(::google::protobuf::int64 value) {
  
  c_time_ = value;
  // @@protoc_insertion_point(field_set:afs.Stat.c_time)
}

// optional int32 block_size = 12;
inline void Stat::clear_block_size() {
  block_size_ = 0;
}
inline ::google::protobuf::int32 Stat::block_size() const {
  // @@protoc_insertion_point(field_get:afs.Stat.block_size)
  return block_size_;
}
inline void Stat::set_block_size(::google::protobuf::int32 value) {
  
  block_size_ = value;
  // @@protoc_insertion_point(field_set:afs.Stat.block_size)
}

// optional int32 blocks = 13;
inline void Stat::clear_blocks() {
  blocks_ = 0;
}
inline ::google::protobuf::int32 Stat::blocks() const {
  // @@protoc_insertion_point(field_get:afs.Stat.blocks)
  return blocks_;
}
inline void Stat::set_blocks(::google::protobuf::int32 value) {
  
  blocks_ = value;
  // @@protoc_insertion_point(field_set:afs.Stat.blocks)
}

// -------------------------------------------------------------------

// Dirent

// optional string name = 1;
inline void Dirent::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Dirent::name() const {
  // @@protoc_insertion_point(field_get:afs.Dirent.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Dirent::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afs.Dirent.name)
}
inline void Dirent::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afs.Dirent.name)
}
inline void Dirent::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afs.Dirent.name)
}
inline ::std::string* Dirent::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:afs.Dirent.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Dirent::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Dirent::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:afs.Dirent.name)
}

// optional int32 reclen = 2;
inline void Dirent::clear_reclen() {
  reclen_ = 0;
}
inline ::google::protobuf::int32 Dirent::reclen() const {
  // @@protoc_insertion_point(field_get:afs.Dirent.reclen)
  return reclen_;
}
inline void Dirent::set_reclen(::google::protobuf::int32 value) {
  
  reclen_ = value;
  // @@protoc_insertion_point(field_set:afs.Dirent.reclen)
}

// optional int32 d_type = 3;
inline void Dirent::clear_d_type() {
  d_type_ = 0;
}
inline ::google::protobuf::int32 Dirent::d_type() const {
  // @@protoc_insertion_point(field_get:afs.Dirent.d_type)
  return d_type_;
}
inline void Dirent::set_d_type(::google::protobuf::int32 value) {
  
  d_type_ = value;
  // @@protoc_insertion_point(field_set:afs.Dirent.d_type)
}

// -------------------------------------------------------------------

// DirentReply

// optional int32 count = 1;
inline void DirentReply::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 DirentReply::count() const {
  // @@protoc_insertion_point(field_get:afs.DirentReply.count)
  return count_;
}
inline void DirentReply::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:afs.DirentReply.count)
}

// repeated .afs.Dirent dirent = 2;
inline int DirentReply::dirent_size() const {
  return dirent_.size();
}
inline void DirentReply::clear_dirent() {
  dirent_.Clear();
}
inline const ::afs::Dirent& DirentReply::dirent(int index) const {
  // @@protoc_insertion_point(field_get:afs.DirentReply.dirent)
  return dirent_.Get(index);
}
inline ::afs::Dirent* DirentReply::mutable_dirent(int index) {
  // @@protoc_insertion_point(field_mutable:afs.DirentReply.dirent)
  return dirent_.Mutable(index);
}
inline ::afs::Dirent* DirentReply::add_dirent() {
  // @@protoc_insertion_point(field_add:afs.DirentReply.dirent)
  return dirent_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::afs::Dirent >*
DirentReply::mutable_dirent() {
  // @@protoc_insertion_point(field_mutable_list:afs.DirentReply.dirent)
  return &dirent_;
}
inline const ::google::protobuf::RepeatedPtrField< ::afs::Dirent >&
DirentReply::dirent() const {
  // @@protoc_insertion_point(field_list:afs.DirentReply.dirent)
  return dirent_;
}

// -------------------------------------------------------------------

// FlushRequest

// optional string path = 1;
inline void FlushRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FlushRequest::path() const {
  // @@protoc_insertion_point(field_get:afs.FlushRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FlushRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afs.FlushRequest.path)
}
inline void FlushRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afs.FlushRequest.path)
}
inline void FlushRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afs.FlushRequest.path)
}
inline ::std::string* FlushRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:afs.FlushRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FlushRequest::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FlushRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:afs.FlushRequest.path)
}

// optional bytes data = 2;
inline void FlushRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FlushRequest::data() const {
  // @@protoc_insertion_point(field_get:afs.FlushRequest.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FlushRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afs.FlushRequest.data)
}
inline void FlushRequest::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afs.FlushRequest.data)
}
inline void FlushRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afs.FlushRequest.data)
}
inline ::std::string* FlushRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:afs.FlushRequest.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FlushRequest::release_data() {
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FlushRequest::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:afs.FlushRequest.data)
}

// -------------------------------------------------------------------

// FlushReply

// optional int32 status = 1;
inline void FlushReply::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 FlushReply::status() const {
  // @@protoc_insertion_point(field_get:afs.FlushReply.status)
  return status_;
}
inline void FlushReply::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:afs.FlushReply.status)
}

// -------------------------------------------------------------------

// StatusReply

// optional int32 status = 1;
inline void StatusReply::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 StatusReply::status() const {
  // @@protoc_insertion_point(field_get:afs.StatusReply.status)
  return status_;
}
inline void StatusReply::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:afs.StatusReply.status)
}

// -------------------------------------------------------------------

// RenameRequest

// optional string old_name = 1;
inline void RenameRequest::clear_old_name() {
  old_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameRequest::old_name() const {
  // @@protoc_insertion_point(field_get:afs.RenameRequest.old_name)
  return old_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameRequest::set_old_name(const ::std::string& value) {
  
  old_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afs.RenameRequest.old_name)
}
inline void RenameRequest::set_old_name(const char* value) {
  
  old_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afs.RenameRequest.old_name)
}
inline void RenameRequest::set_old_name(const char* value, size_t size) {
  
  old_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afs.RenameRequest.old_name)
}
inline ::std::string* RenameRequest::mutable_old_name() {
  
  // @@protoc_insertion_point(field_mutable:afs.RenameRequest.old_name)
  return old_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameRequest::release_old_name() {
  
  return old_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameRequest::set_allocated_old_name(::std::string* old_name) {
  if (old_name != NULL) {
    
  } else {
    
  }
  old_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), old_name);
  // @@protoc_insertion_point(field_set_allocated:afs.RenameRequest.old_name)
}

// optional string new_name = 2;
inline void RenameRequest::clear_new_name() {
  new_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameRequest::new_name() const {
  // @@protoc_insertion_point(field_get:afs.RenameRequest.new_name)
  return new_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameRequest::set_new_name(const ::std::string& value) {
  
  new_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:afs.RenameRequest.new_name)
}
inline void RenameRequest::set_new_name(const char* value) {
  
  new_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:afs.RenameRequest.new_name)
}
inline void RenameRequest::set_new_name(const char* value, size_t size) {
  
  new_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:afs.RenameRequest.new_name)
}
inline ::std::string* RenameRequest::mutable_new_name() {
  
  // @@protoc_insertion_point(field_mutable:afs.RenameRequest.new_name)
  return new_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameRequest::release_new_name() {
  
  return new_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameRequest::set_allocated_new_name(::std::string* new_name) {
  if (new_name != NULL) {
    
  } else {
    
  }
  new_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_name);
  // @@protoc_insertion_point(field_set_allocated:afs.RenameRequest.new_name)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace afs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_afs_2eproto__INCLUDED
